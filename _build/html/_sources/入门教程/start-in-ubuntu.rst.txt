开始使用Ubuntu
==============

ubuntu系统常用指令
------------------

.. code-block:: bash

    pwd  #显示当前工作路径

    cd  #改变目录，用于输入需要前往的路径/目录
    cd ..     #directory name
    cd ..     #表示进入上层目录
    cd ../..  #进入上上层目录，后面还可以加更多。
    cd -      #表示返回上一次的目录
    cd ~      #进入home主目录，即/home/用户名的简写

    ls  #显示当前目录下的文件（不包括隐藏文件和缓存文件等）
    ls -a  #列出目录下所有文件

    mkdir  #创建目录，后面接上directory的名字
    mkdir imca  #创建一个名为的“imca”目录

    touch  #创建任意格式的文件 如.cpp .c .hpp等
    touch hello_imca.cpp  #创建hello_imca源代码

    rm  #删除文件
    rm -I <目录名>  #这样做会删除指定目录中的所有子目录和包含的文件

    apt/apt-get  #更推荐使用apt命令而不是apt-get命令，它的命令更精简而且易用
    sudo apt install <软件名>  #安装软件最简单的方式
    sudo apt list             #查看所有已安装的软件列表
    sudo apt search <软件名>   #搜索某个软件
    sudo apt remove <软件名>   #删除某个软件包
    sudo apt purge <软件名>    #删除某个软件包以及配置文件，更彻底
    sudo apt update           #更新相关命令
    sudo apt upgrade          #更新相关命令

    dpkg  #包管理工具
    dpkg -i <.deb后缀的软件名>    #i 表示 install(下载)
    dpkg -r <包的名字>           #r 表示 remove, 此种方法会保留配置文件
    dpkg -P <包的名字>           #直接全删了，配置也不会保留
    dpkg -l                     #查看安装列表
    dpkg -S <包的名字>           #搜索某个包

    <命令名> -h or --help  #如果碰到不会的命令，或者忘记了具体的options（操作选项），可以使用帮助命令

**以上指令根据笔者印象列举，更多可自行搜索**

搭建c/c++环境
-----------------

1. **C编译环境配置和使用**

使用以下指令进行C语言的环境的安装

.. code-block:: bash

    # 安装编译环境
    apt-get install gcc 
    # 查看版本
    gcc --version

接下来我们写一个HelloIMCA.c的文件并编译运行

.. code-block:: bash

    vim HelloIMCA.c  #使用vim创建编辑c文件

在文件内添加下面内容

.. code-block:: C

    #include<stdio.h>
    int main(void){
    printf("Hello IMCA!\n");
    }

保存好后编译运行

.. code-block:: bash

    gcc HelloIMCA.c -o HelloIMCA  #  编译
    ./HelloIMCA                   #  运行

2. **c++编译环境配置和使用** 









.. contents:: Table of Contents
   :depth: 2
   :local: